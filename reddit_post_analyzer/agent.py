import dotenv
from google.adk.agents import Agent
from google.adk.tools import FunctionTool


dotenv.load_dotenv()

async def get_reddit_post(reddit_post_url_or_id: str) -> dict:
    """
    Fetches specific Reddit post content (title, body, author, score, and top comments)
    using the provided Reddit post URL or ID.
    """
    from .reddit_api_handler import RedditAPIHandler

    reddit_api_handler = RedditAPIHandler()
    return await reddit_api_handler.get_post_content(reddit_post_url_or_id)

reddit_post_fetcher_tool = FunctionTool(func=get_reddit_post)

reply_generator = Agent(
    name="reply_generator",
    model="gemini-2.5-flash-preview-05-20",
    description="An AI assistant specialized in crafting Reddit comments according to the provided post data.",
    instruction="""You are an AI assistant specialized in crafting Reddit comments.
    You will receive a single JSON string as input. This JSON string contains details of a Reddit post, including 'title', 'body', 'author', and a list of 'comments'. Each comment in the list is an object with 'body', 'score', and 'author'.
    Example of expected input JSON string:
    '{"title": "My new project", "body": "Check out my project details...", "author": "user123", "comments": [{"body": "Cool!", "score": 5, "author": "commenterA"}, {"body": "Interesting idea.", "score": 3, "author": "commenterB"}]}'

    Your task is to generate exactly 3 thoughtful and engaging reply options based on the provided Reddit post data.
    Each reply MUST:
    - Be directly relevant to the post's content and any provided comments.
    - Aim to ask a pertinent question or provide a unique, constructive insight.
    - Avoid generic statements. Be specific.
    - Maintain a respectful and positive tone suitable for a public forum.
    - Be distinct from the other generated replies.

    You MUST return your 3 replies formatted STRICTLY as a single JSON string representing an array of strings.
    Example of expected output JSON string:
    '["This is a great insight, especially regarding point X. Have you considered Y?", "Thanks for sharing this, @user123! I found Z particularly interesting.", "Another perspective on this could be W. What are your thoughts on that?"]'
    Ensure the output is only the JSON string array and nothing else.
    """,
    tools=[]
)

reddit_post_analyzer = Agent(
    name="reddit_post_analyzer",
    model="gemini-2.5-flash-preview-05-20",
    description="An AI assistant that analyzes Reddit posts and crafts suitable replies.",
    instruction="""You are an AI assistant that analyzes Reddit posts and crafts suitable replies.
    Your process is:
    1. Receive a Reddit post URL or ID from the user.
    2. Use the 'get_reddit_post' tool to fetch the detailed content of this Reddit post. This will include the title, body, author, score, and some top comments.
    3. Take the data returned by 'get_reddit_post' and pass it directly to the 'generate_llm_based_replies' tool. This tool will engage another AI to create 3 high-quality, insightful replies tailored to the post's content.
    4. Your final output to the user should be ONLY the list of 3 replies generated by the 'generate_llm_based_replies' tool. Present them clearly. If there was an error, report the error.
    Do not add any extra conversational text or summarization of your own unless an error occurred.
    """,
    tools=[reddit_post_fetcher_tool],
    sub_agents=[reply_generator]
)


root_agent = reddit_post_analyzer